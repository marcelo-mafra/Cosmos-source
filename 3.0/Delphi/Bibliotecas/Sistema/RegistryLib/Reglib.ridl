// ************************************************************************ //
// WARNING                                                                    
// -------                                                                    
// This file is generated by the Type Library importer or Type Libary Editor. 
// Barring syntax errors, the Editor will parse modifications made to the file. 
// However, when applying changes via the Editor this file will be regenerated  
// and comments or formatting changes will be lost.                             
// ************************************************************************ //
// File generated on 14/11/2011 10:28:46 (- $Rev: 12980 $, 48429714).

[
  uuid(3B8656C5-1719-11D7-8F3C-0000B43724F6), 
  version(1.0), 
  helpstring("Library with registry read/write functions ")
    
]
library Reglib
{

  importlib("stdole2.tlb");

  interface IReg;
  coclass Reg;


  [
    uuid(3B8656C6-1719-11D7-8F3C-0000B43724F6), 
    version(1.0), 
    helpstring("Interface for Reg Object"), 
    oleautomation
  ]
  interface IReg: IUnknown
  {
    [id(0x00000001)]
    BSTR _stdcall ReadString([in] BSTR ValueName);
    [id(0x00000002)]
    long _stdcall ReadInteger([in] BSTR ValueName);
    [id(0x00000003)]
    VARIANT_BOOL _stdcall ReadBool([in] BSTR ValueName);
    [id(0x00000004)]
    double _stdcall ReadFloat([in] BSTR ValueName);
    [id(0x00000005)]
    void _stdcall WriteString([in] BSTR ValueName, [in] BSTR Value);
    [id(0x00000006)]
    void _stdcall WriteInteger([in] BSTR ValueName, [in] long Value);
    [id(0x00000007)]
    void _stdcall WriteBool([in] BSTR ValueName, [in] VARIANT_BOOL Value);
    [id(0x00000008)]
    void _stdcall WriteFloat([in] BSTR ValueName, [in] double Value);
    [id(0x00000009)]
    void _stdcall WriteCurrency([in] BSTR ValueName, [in] CURRENCY Value);
    [id(0x0000000A)]
    void _stdcall WriteDate([in] BSTR ValueName, [in] DATE Value);
    [id(0x0000000C)]
    void _stdcall WriteTime([in] BSTR ValueName, [in] DATE Value);
    [id(0x0000000D)]
    CURRENCY _stdcall ReadCurrency([in] BSTR ValueName);
    [id(0x0000000E)]
    DATE _stdcall ReadDate([in] BSTR ValueName);
    [id(0x0000000F)]
    DATE _stdcall ReadTime([in] BSTR ValueName);
    [id(0x00000010)]
    VARIANT _stdcall GetKeyNames(void);
    [id(0x0000000B)]
    VARIANT_BOOL _stdcall ValueExists([in] BSTR ValueName);
    [id(0x00000011)]
    VARIANT_BOOL _stdcall KeyExists([in] BSTR KeyName);
    [id(0x00000012)]
    VARIANT _stdcall ReadDateTime([in] BSTR ValueName);
    [id(0x00000013)]
    void _stdcall WriteDateTime([in] BSTR ValueName, [in] VARIANT Value);
    [id(0x00000014)]
    BSTR _stdcall GetValueNames(void);
    [id(0x00000015)]
    BSTR _stdcall ReadSectionValues(void);
    [propget, id(0x00000016)]
    long _stdcall Root(void);
    [propput, id(0x00000016)]
    void _stdcall Root([in] long Param1);
    [propput, id(0x0000001A)]
    void _stdcall KeyName([in] BSTR KeyPath, [in] VARIANT_BOOL Param2);
    [id(0x00000017)]
    void _stdcall CloseKey(void);
    [id(0x00000018)]
    long _stdcall ReadBinary([in] BSTR ValueName, [in] long Buffer, [in] long BufferSize);
    [id(0x00000019)]
    void _stdcall WriteBinary([in] BSTR ValueName, [in] VARIANT BinaryData, [in] long BufferSize);
    [id(0x0000001B)]
    VARIANT_BOOL _stdcall DeleteValue([in] BSTR ValueName);
    [id(0x0000001C)]
    VARIANT_BOOL _stdcall Deletekey([in] BSTR KeyName);
    [id(0x0000001D)]
    VARIANT_BOOL _stdcall CreateKey([in] BSTR KeyName);
    [id(0x0000001E)]
    VARIANT_BOOL _stdcall HasSubKeys(void);
    [id(0x0000001F)]
    void _stdcall MoveKey([in] BSTR OldKeyName, [in] BSTR NewKeyName, [in] VARIANT_BOOL Deletekey);
    [id(0x00000020)]
    void _stdcall RenameValue([in] BSTR OldValueName, [in] BSTR NewValueName);
    [id(0x00000022)]
    long _stdcall GetDataSize([in] BSTR ValueName);
    [id(0x00000023)]
    VARIANT_BOOL _stdcall SaveKey([in] BSTR KeyName, [in] BSTR FileName);
    [id(0x00000025)]
    VARIANT_BOOL _stdcall RestoreKey([in] BSTR KeyName, [in] BSTR FileName);
    [id(0x00000026)]
    VARIANT_BOOL _stdcall ReplaceKey([in] BSTR KeyName, [in] BSTR FileName, [in] BSTR BkpFileName);
    [id(0x00000027)]
    VARIANT_BOOL _stdcall LoadKey([in] BSTR KeyName, [in] BSTR FileName);
    [id(0x00000028)]
    VARIANT_BOOL _stdcall UnLoadKey([in] BSTR KeyName);
    [id(0x00000029)]
    VARIANT_BOOL _stdcall RegistryConnect([in] BSTR HostName);
    [id(0x00000021)]
    VARIANT_BOOL _stdcall OpenKey([in] BSTR KeyName, [in] VARIANT_BOOL Create);
    [propget, id(0x00000024)]
    BSTR _stdcall CurrentPath(void);
  };

  [
    uuid(3B8656C8-1719-11D7-8F3C-0000B43724F6), 
    version(1.0), 
    helpstring("Reg")
  ]
  coclass Reg
  {
    [default] interface IReg;
  };

};